<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xiu.pw</id>
    <title>秀儿</title>
    <updated>2020-09-29T19:26:32.092Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://xiu.pw"/>
    <link rel="self" href="https://xiu.pw/atom.xml"/>
    <subtitle>知难而退</subtitle>
    <logo>https://xiu.pw/images/avatar.png</logo>
    <icon>https://xiu.pw/favicon.ico</icon>
    <rights>All rights reserved 2020, 秀儿</rights>
    <entry>
        <title type="html"><![CDATA[网页防止调试按f12关闭网页或跳转方法]]></title>
        <id>https://xiu.pw/YHapp3sOT/</id>
        <link href="https://xiu.pw/YHapp3sOT/">
        </link>
        <updated>2020-09-29T19:25:23.000Z</updated>
        <content type="html"><![CDATA[<h2 id="简介">简介</h2>
<p><strong>在有些页面不想让用户访问F12的情况下我们需要如何去处理,要如何实现用户访问F12关闭网页或进行跳转。</strong></p>
<p><strong>下面具体贴上代码 复制到你的网页代码中即可</strong></p>
<pre><code class="language-php">&lt;script type=&quot;text/javascript&quot;&gt;
//判断F12审查元素
function fuckyou() {
window.close(); //关闭当前窗口(防抽)
window.location = &quot;about:blank&quot;; //将当前窗口跳转置空白页
}

function ck() {
console.profile();
console.profileEnd();
//我们判断一下profiles里面有没有东西，如果有，肯定有人按F12了，没错！！
if(console.clear) {
console.clear()
};
if(typeof console.profiles == &quot;object&quot;) {
return console.profiles.length &gt; 0;
}
}

function hehe() {
if((window.console &amp;&amp; (console.firebug || console.table &amp;&amp; /firebug/i.test(console.table()))) || (typeof opera == 'object' &amp;&amp; typeof opera.postError == 'function' &amp;&amp; console.profile.length &gt; 0)) {
fuckyou();
}
if(typeof console.profiles == &quot;object&quot; &amp;&amp; console.profiles.length &gt; 0) {
fuckyou();
}
}
hehe();
window.onresize = function() {
if((window.outerHeight - window.innerHeight) &gt; 200)
//判断当前窗口内页高度和窗口高度，如果差值大于200，那么呵呵
fuckyou();
}
&lt;/script&gt;
</code></pre>
<h2 id="f12-网页跳转js">F12-网页跳转JS</h2>
<pre><code class="language-javascript">function collect() {
    //开始javascript执行过程的数据收集
    console.profile();
    //配合profile方法，作为数据收集的结束
    console.profileEnd();
    //我们判断一下profiles里面有没有东西，如果有，肯定有人按F12了，没错！！  
    if (console.clear) {
        //清空控制台
        console.clear()
    };
    if (typeof console.profiles == &quot;object&quot;) {
        return console.profiles.length &gt; 0;
    }
}
function check() {
    if ((window.console &amp;&amp; (console.firebug || console.table &amp;&amp; /firebug/i.test(console.table()))) || (typeof opera == 'object' &amp;&amp; typeof opera.postError == 'function' &amp;&amp; console.profile.length &gt; 0)) {
        jump();
    }
    if (typeof console.profiles == &quot;object&quot; &amp;&amp; console.profiles.length &gt; 0) {
        jump();
    }
}
check();
window.onresize = function() {
    //判断当前窗口内页高度和窗口高度
    if ((window.outerHeight - window.innerHeight) &gt; 200)
    jump();
}
function jump() {
    window.location = &quot;https://72.rs&quot;;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[screen运行rclone挂载]]></title>
        <id>https://xiu.pw/GSfwPi2fH/</id>
        <link href="https://xiu.pw/GSfwPi2fH/">
        </link>
        <updated>2020-09-20T03:42:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="screen命令可以用于多任务同时操作功能可进行任务间的切换">screen命令可以用于多任务同时操作功能（可进行任务间的切换）</h1>
<h2 id="1-安装screen">1、安装screen</h2>
<h3 id="centos下安装">centos下安装：</h3>
<pre><code class="language-bash">yum install screen
</code></pre>
<h3 id="debian或者ubuntu下安装">Debian或者Ubuntu下安装：</h3>
<pre><code class="language-bash">apt-get install screen
</code></pre>
<h2 id="2-安装完成后创建一个会话">2、安装完成后，创建一个会话</h2>
<pre><code class="language-bash">screen -S 会话名
</code></pre>
<h2 id="3-就能进入运行你想运行的程序本文以rclone挂载onedrive为例挂载googledeive方法也差不多运行挂载命令-演示name为od本地文件为rootonedrive网盘目录为根目录的情况">3、就能进入，运行你想运行的程序，本文以rclone挂载onedrive为例，挂载googledeive方法也差不多，运行挂载命令。演示name为od，本地文件为/root/onedrive，网盘目录为根目录/的情况</h2>
<pre><code class="language-bash">rclone mount od:/ /root/onedrive --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000
</code></pre>
<h2 id="4-回车后会运行切换会主操作界面用ctrlad">4、回车后会运行，切换会主操作界面用ctrl+a+d</h2>
<pre><code class="language-bash">其他命令：

显示所有会话：
screen -ls

恢复一个会话：
screen -r 会话名

如果上面的无法恢复，使用
screen -d -r 会话名
</code></pre>
<p><strong>注：如在会话中输入exit，将会退出，会话将不存在</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DD Windows 一键脚本（包含GCP谷歌云Oracle甲骨文）]]></title>
        <id>https://xiu.pw/TtlfXDfto/</id>
        <link href="https://xiu.pw/TtlfXDfto/">
        </link>
        <updated>2020-09-18T09:45:02.000Z</updated>
        <content type="html"><![CDATA[<h1 id="说明">说明</h1>
<ul>
<li>无限制全自动dd安装Windows</li>
<li>突破没有VNC,没有救援模式,内存比dd包小的限制</li>
<li>使用Debian Live CD中的busybox做中间媒介,经过复杂的处理使本机的网络参数传进Windows操作系统中</li>
<li>即使没有DHCP能够让Windows获取网络参数,也能让Windows操作系统在开机的第一时间能够连通网络</li>
</ul>
<p><strong>特别注意：OpenVZ构架不适用</strong></p>
<h1 id="安装安装">安装安装</h1>
<p>#Debian/Ubuntu:</p>
<pre><code class="language-bash">apt-get install -y xz-utils openssl gawk file
</code></pre>
<p>#RedHat/CentOS:</p>
<pre><code class="language-bash">yum install -y xz openssl gawk file
</code></pre>
<p>如果出现错误，请运行</p>
<p>#Debian/Ubuntu:</p>
<pre><code class="language-bash">apt-get update
</code></pre>
<p>#RedHat/CentOS:</p>
<pre><code class="language-bash">yum update
</code></pre>
<h2 id="一键脚本">一键脚本</h2>
<pre><code class="language-bash">wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd '[Windows dd包直连地址]'
</code></pre>
<h1 id="精简版dd包">精简版DD包</h1>
<p>选择好版本，输入以下一键脚本即可</p>
<pre><code class="language-bash">#DD Windows Server 2003 32位 精简版 [账户Administrator密码cxthhhhh.com]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1j9ow8dsIA7DucsGpDI-kzJwiNW9kMceT'

#DD Windows Server 2008 R2 64位 精简版 [账户Administrator密码WinSrv2008x64-Chinese]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1DTps9WwC6RZ8szflais8YazpkCVdqdI7'

#DD Windows Server 2012 R2 64位 精简版 [账户Administrator密码WinSrv2012r2x64-Chinese]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1KTzROA2eWTHC8qWUG2Vr-onuRTwaIOSe'

#DD Windows Server 2019 Datacenter 64位 精简版 [账户Administrator密码WinSrv2019dc-Chinese]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1NbOzolHsDGbp3gJ3TeQ9_4qkmSLIuO07'

#DD Windows7 32位 精简版 [账户Administrator密码Windows7x86-Chinese]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/15NkZxVdkcx2P9cFez9gxkqVEQksKMrx1'

#DD Windows7 sp1 64位 旗舰精简版 自带IIS [账户Administrator密码www.nat.ee]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1KA9PDH4T2ODbxS97T6MtTk5TwifQQoIp'

#DD Windows7 64位 旗舰精简版 [账户Administrator密码www.nat.ee]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1C9Y0Iu1pGX4-blb_3G49jOqv13Zeka6-'

#DD Windows10 64位 企业精简版 2019LTSC [账户Administrator密码www.nat.ee]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1pUNKV0nQvFXDZYJnfq2FzEfQNCZ3_5g7'
</code></pre>
<h2 id="完整版dd包">完整版DD包</h2>
<pre><code class="language-bash">#DD Windows Server 2012 R2 Datacenter 64位 完整版 [账户administrator密码Password147]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1bfXS59h0y8Ibz5o84DvcBMfqhP0d12Ib'

#DD Windows Server 2016 Datacenter 64位 完整版 [账户administrator密码Password147]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1CElbDjEXrjPIX4GpdRBwRXBWTtSHOwzi'

#DD Windows Server 2019 Datacenter 64位 完整版 [账户administrator密码Password147]
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1gRIT702MrVzLr8Bmk8OF-_Ckp02_tOxE'
</code></pre>
<h2 id="oracle甲骨文">Oracle甲骨文</h2>
<p>此DD包仅适用于Oracle甲骨文DD Win使用</p>
<pre><code class="language-bash">wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh -dd 'https://api.moeclub.org/GoogleDrive/1NHKdm3xfQ3HySNCGvrzgdz7RMVCI1qGy'
</code></pre>
<h2 id="网路参数安装">网路参数安装</h2>
<p>比如GCP谷歌云Azure微软云OVH云服务器等需要指定网络参数安装的方式，示例为GCP谷歌云</p>
<pre><code># 将X.X.X.X替换为自己的网络参数.
# --ip-addr :IP Address/内网IP地址
# --ip-mask :Netmask   /子网掩码
# --ip-gate :Gateway   /网关
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh --ip-addr X.X.X.X --ip-mask X.X.X.X --ip-gate X.X.X.X -dd 'DD包 直链地址'
</code></pre>
<p>例：<br>
DD Windows 7 64位 精简旗舰版 只需替换--ip-addr后面的X.X.X.X为你自己的内网IP即可，其他不变<br>
在GCP谷歌云Debian Ubuntu测试成功CentOS未测试<br>
默认账户Administrator密码www.nat.ee</p>
<h2 id="gcp谷歌云-台湾">GCP谷歌云-台湾</h2>
<pre><code class="language-bash">
wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh --ip-addr X.X.X.X --ip-mask 255.255.255.0 --ip-gate 10.140.0.1 -dd 'https://api.moeclub.org/GoogleDrive/1C9Y0Iu1pGX4-blb_3G49jOqv13Zeka6-'
</code></pre>
<h2 id="gcp谷歌云-香港">GCP谷歌云 香港</h2>
<pre><code class="language-bash">wget --no-check-certificate -qO InstallNET.sh 'https://moeclub.org/attachment/LinuxShell/InstallNET.sh' &amp;&amp; bash InstallNET.sh --ip-addr X.X.X.X --ip-mask 255.255.255.0 --ip-gate 10.170.0.1 -dd 'https://api.moeclub.org/GoogleDrive/1C9Y0Iu1pGX4-blb_3G49jOqv13Zeka6-'
</code></pre>
<p>连接上后如果遇到无法打开网页的情况，修改DNS即可</p>
<pre><code class="language-bash">8.8.8.8
8.8.4.4
</code></pre>
<h1 id="关于激活">关于激活</h1>
<p>可以使用本博客的KMS激活</p>
<p>如果不能使用KMS激活，可以试试下面的Key（不一定都能成功激活）<br>
RHTBY-VWY6D-QJRJ9-JGQ3X-Q2289<br>
H8PDJ-H4NKW-3GKH7-YHKJ7-4C2JR<br>
右键以管理员身份运行CMD（命令提示符），依次执行下面的命令</p>
<pre><code>slmgr.vbs -upk
slmgr.vbs -ipk RHTBY-VWY6D-QJRJ9-JGQ3X-Q2289
slmgr.vbs -ato
slmgr.vbs -dlv
</code></pre>
<p>Windows服务器开启Ping功能<br>
进入服务器后点击 开始 → 运行 输入如下命令：<br>
开启Ping：</p>
<pre><code>netsh firewall set icmpsetting 8
</code></pre>
<p>关闭Ping：</p>
<pre><code>netsh firewall set icmpsetting 8 disable
</code></pre>
<p>备用链接<br>
备用链接存储在Dropbox国内需要科学上网，国外机器可以直接使用；</p>
<h1 id="精简版">精简版</h1>
<pre><code class="language-bash">#DD Windows Server 2003 32位 精简版 [账户Administrator密码cxthhhhh.com]
https://dl-web.dropbox.com/s/ajqa1vwxfqulazd/Win-Server-2003-X32%5BAdministrator-cxthhhhh.com%5D.gz

#DD Windows Server 2008 R2 64位 精简版 [账户Administrator密码WinSrv2008x64-Chinese]
https://dl-web.dropbox.com/s/jhxp38eeu9quu12/Win-Server-2008R2-X64%5BAdministrator-WinSrv2008x64-Chinese%5D.gz

#DD Windows Server 2012 R2 64位 精简版 [账户Administrator密码WinSrv2012r2x64-Chinese]
https://dl-web.dropbox.com/s/9r7v27hmmbytur1/Win-Server-2012R2-X64%5BAdministrator-WinSrv2012r2x64-Chinese%5D.gz

#DD Windows Server 2019 Datacenter 64位 精简版 [账户Administrator密码WinSrv2019dc-Chinese]
https://dl-web.dropbox.com/s/y675vyr04egz2xs/Win-Server2019-Datacenter-X64%5BAdministrator-WinSrv2019dc-Chinese%5D.gz

#DD Windows7 32位 精简版 [账户Administrator密码Windows7x86-Chinese]
https://dl-web.dropbox.com/s/6wqa2tf51rtojdh/Win7-X86%5BAdministrator-Windows7x86-Chinese%5D.gz

#DD Windows7 sp1 64位 旗舰精简版 自带IIS [账户Administrator密码www.nat.ee]
https://dl-web.dropbox.com/s/4ouiqrddtajk1c8/Win7%20X64%20sp1%20IIS%5BAdministrator-www.nat.ee%5D.gz

#DD Windows7 64位 旗舰精简版 [账户Administrator密码www.nat.ee]
https://dl-web.dropbox.com/s/fzoaonaj9fbxatg/Win7-X64%5BAdministrator-www.nat.ee%5D.gz

#DD Windows10 64位 企业精简版 2019LTSC [账户Administrator密码www.nat.ee]
https://dl-web.dropbox.com/s/ra7m1zm0fevjuby/Win10-2019LTSC-X64%5BAdministrator-www.nat.ee%5D.gz

#Oracle专用 DD Windows7 64位 精简版 [账户Administrator密码www.nat.ee]
https://dl-web.dropbox.com/s/x5f23j6qhp1dneq/Oracle-Win7-X64%5BAdministrator-www.nat.ee%5D.gz

#OVH专用 DD Windows7 64位 精简版 [账户administrator密码www.80host.com]
https://dl-web.dropbox.com/s/knhw80grm9o3b35/OVH-Win7-X64%5Badministrator-www.80host.com%5D.gz
</code></pre>
<h1 id="完整版">完整版</h1>
<pre><code class="language-bash">#DD Windows Server 2012 R2 Datacenter 64位 完整版 [账户administrator密码Password147]
https://dl-web.dropbox.com/s/3y3mvht0u6fm34g/cn_windows2012r2%5Badministrator-Password147%5D.gz

#DD Windows Server 2016 Datacenter 64位 完整版 [账户administrator密码Password147]
https://dl-web.dropbox.com/s/wk3zltm9kepfg99/cn_windows2016%5Badministrator-Password147%5D.gz

#DD Windows Server 2019 Datacenter 64位 完整版 [账户administrator密码Password147]
https://dl-web.dropbox.com/s/bp92z37ae4hlnd0/cn_windows2019%5Badministrator-Password147%5D.gz

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux系统下录制命令操作]]></title>
        <id>https://xiu.pw/7WlZGngaW/</id>
        <link href="https://xiu.pw/7WlZGngaW/">
        </link>
        <updated>2020-09-16T13:38:08.000Z</updated>
        <content type="html"><![CDATA[<h1 id="linux系统下录制命令操作">Linux系统下录制命令操作</h1>
<p>通常情况下，在Windows或者Android、iOS系统下我们能借助软件进行录屏操作，而在Linux命令行模式下，如果想要录制命令操作，应该怎样进行录屏呢？**</p>
<p>#如何安装<br>
Centos</p>
<pre><code>yum install asciinema -y
</code></pre>
<p>Debian/Ubuntu</p>
<pre><code>apt-get install asciinema -y
</code></pre>
<p>#如何录制<br>
asciinema rec <file-name><br>
如：</p>
<pre><code>asciinema rec demo.rec
</code></pre>
<p><strong>录制完成后以Ctrl+D结束，文件会保存在当前目录，如果想要保存到其他位置，使用asciinema rec /path/demo.rec即可。</strong></p>
<p>#如何使用<br>
嵌入网页需要调用官方的css和js，由于官方的css和js文件不在国内，调用起来非常很慢，影响用户体验。所以我把文件放在GitHub上面，使用jsDelivr来加速文件。<br>
调用</p>
<pre><code class="language-css">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/gh/moeik/sshrec/sshrec.css&quot; /&gt;   
&lt;script src=&quot;https://cdn.jsdelivr.net/gh/moeik/sshrec/sshrec.js&quot;&gt;&lt;/script&gt;
</code></pre>
<p>你可以放在页面的head处，避免每次使用都去调用。<br>
或者在需要插入视频的时候调用：</p>
<pre><code class="language-css">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/gh/moeik/sshrec/sshrec.css&quot; /&gt;   
&lt;script src=&quot;https://cdn.jsdelivr.net/gh/moeik/sshrec/sshrec.js&quot;&gt;&lt;/script&gt;
&lt;sshsharer-player src=&quot;/path/demo.rec&quot;&gt;&lt;/sshsharer-player&gt;
</code></pre>
<p>插入轻视频</p>
<pre><code class="language-css">&lt;sshsharer-player src=&quot;/path/demo.rec&quot;&gt;&lt;/sshsharer-player&gt;
</code></pre>
<p>如果调用远程视频文件src处也可以换成http链接。</p>
<h2 id="typecho使用">Typecho使用：</h2>
<p>在写文章的时候强制转换为HTML格式即可~</p>
<pre><code class="language-css">!!!
&lt;sshsharer-player src=&quot;/path/demo.rec&quot;&gt;&lt;/sshsharer-player&gt;
!!!
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux系统一键申请域名证书]]></title>
        <id>https://xiu.pw/9cBkSiskQ/</id>
        <link href="https://xiu.pw/9cBkSiskQ/">
        </link>
        <updated>2020-09-16T13:35:03.000Z</updated>
        <content type="html"><![CDATA[<h1 id="linux系统一键申请lets-encrypt域名证书">Linux系统一键申请Let's Encrypt域名证书</h1>
<h2 id="适用于linux系统nginx环境">适用于Linux系统NGINX环境</h2>
<h3 id="使用">使用:</h3>
<p>申请证书前请提前解析域名到服务器</p>
<pre><code>bash &lt;(curl -s -L git.io/dmSSL)
</code></pre>
<p>按照提示输入域名即可</p>
<p>证书文件保存在/home/ssl/<domain>/路径下</p>
<p>Github:https://github.com/moeik/domainSSL</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gclone 一个 Rclone 的魔改版本支持分享转存突破750G限制]]></title>
        <id>https://xiu.pw/lVqtW9KOV/</id>
        <link href="https://xiu.pw/lVqtW9KOV/">
        </link>
        <updated>2020-09-15T12:38:29.000Z</updated>
        <content type="html"><![CDATA[<h1 id="介绍">介绍</h1>
<p>Gclone是一个基于Rclone的魔改版本，功能与原版Rclone相同，但增加了两个实用功能；</p>
<p>支持服务端直接转存他人分享的文件及文件夹<br>
支持突破Google Drive单账号每日750G限制，基于Google的Service Account服务<br>
GitHub项目：https://github.com/donwa/gclone</p>
<h2 id="gclone">Gclone</h2>
<pre><code>bash &lt;(wget -qO- https://git.io/gclone.sh)
</code></pre>
<p>为了以后使用方便，直接将gclone改名rclone</p>
<pre><code>cp /usr/bin/gclone /usr/bin/rclone
</code></pre>
<p>参考：Rclone 常用命令参数：https://sunpma.com/864.html<br>
Gclone 新增操作命令</p>
<pre><code>rclone copy 配置名字:{文件ID} 配置名字:网盘路径 --drive-server-side-across-configs
</code></pre>
<p>说明：{文件ID}可以是分享的单独文件也可以是文件夹<br>
分享链接一般是这样的：https://drive.google.com/drive/folders/XXXXXX<br>
最后面的一串字符XXXXXX既是分享ID<br>
关于突破750G需要使用Google的Service Account服务，过程有些复杂，如果没需求就不用弄了；<br>
需要的话可以自行Google教程，Service Account的100个文件最好保存到本地，方便以后使用；</p>
<h2 id="fclone">Fclone</h2>
<p>GitHub项目：https://github.com/mawaya/rclone<br>
Fclone是另一个Rclone的修改版，操作与Rclone和Gclone完全相同<br>
在GitHub中选择需要的Fclone版本，然后在本地解压得到名为fclone的文件<br>
然后将得到的fclone文件上传至服务器/usr/bin目录下<br>
赋予Fclone权限</p>
<pre><code>chmod +x /usr/bin/fclone
</code></pre>
<p>使用时命令改为fclone即可；</p>
<p>快速安装</p>
<pre><code># 下载程序
wget -P /usr/bin https://objectstorage.ap-seoul-1.oraclecloud.com/n/cnyzzr4k2nzj/b/sunpma/o/fclone

# 将Fclone改名为Rclone
cp /usr/bin/fclone /usr/bin/rclone

# 赋予权限
chmod +x /usr/bin/rclone
</code></pre>
<h2 id="安装过程">安装过程</h2>
<p>如果有Service Account的100个文件的话，就先建立以下目录，然后上传文件到accounts目录下</p>
<pre><code>mkdir /root/AutoRclone
mkdir /root/AutoRclone/accounts
</code></pre>
<p>如果没有Service Account就略过，直接开始下面的安装即可；<br>
脚本刚才已经下载过了，现在直接输入rclone config开始安装</p>
<pre><code>n) New remote
s) Set configuration password
q) Quit config
n/s/q&gt; n   # 输入n回车，新建配置
name&gt; GD   # 新建配置的名称，自行设定
Type of storage to configure.
Enter a string value. Press Enter for the default (&quot;&quot;).
Choose a number from below, or type in your own value
 1 / 1Fichier
   \ &quot;fichier&quot;
 2 / Alias for an existing remote
   \ &quot;alias&quot;
 3 / Amazon Drive
   \ &quot;amazon cloud drive&quot;
 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)
   \ &quot;s3&quot;
 5 / Backblaze B2
   \ &quot;b2&quot;
 6 / Box
   \ &quot;box&quot;
 7 / Cache a remote
   \ &quot;cache&quot;
 8 / Dropbox
   \ &quot;dropbox&quot;
 9 / Encrypt/Decrypt a remote
   \ &quot;crypt&quot;
10 / FTP Connection
   \ &quot;ftp&quot;
11 / Google Cloud Storage (this is not Google Drive)
   \ &quot;google cloud storage&quot;
12 / Google Drive
   \ &quot;drive&quot;
13 / Google Photos
   \ &quot;google photos&quot;
14 / Hubic
   \ &quot;hubic&quot;
15 / JottaCloud
   \ &quot;jottacloud&quot;
16 / Koofr
   \ &quot;koofr&quot;
17 / Local Disk
   \ &quot;local&quot;
18 / Mega
   \ &quot;mega&quot;
19 / Microsoft Azure Blob Storage
   \ &quot;azureblob&quot;
20 / Microsoft OneDrive
   \ &quot;onedrive&quot;
21 / OpenDrive
   \ &quot;opendrive&quot;
22 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ &quot;swift&quot;
23 / Pcloud
   \ &quot;pcloud&quot;
24 / Put.io
   \ &quot;putio&quot;
25 / QingCloud Object Storage
   \ &quot;qingstor&quot;
26 / SSH/SFTP Connection
   \ &quot;sftp&quot;
27 / Union merges the contents of several remotes
   \ &quot;union&quot;
28 / Webdav
   \ &quot;webdav&quot;
29 / Yandex Disk
   \ &quot;yandex&quot;
30 / http Connection
   \ &quot;http&quot;
31 / premiumize.me
   \ &quot;premiumizeme&quot;
Storage&gt; 12       # 选择需要挂载的网盘类型
** See help for drive backend at: https://rclone.org/drive/ **

Google Application Client Id
Setting your own is recommended.
See https://rclone.org/drive/#making-your-own-client-id for how to create your own.
If you leave this blank, it will use an internal key which is low performance.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_id&gt;        # 默认直接回车，或者输入自己的OAuth ID
Google Application Client Secret
Setting your own is recommended.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_secret&gt;    # 默认直接回车，或者输入自己的OAuth秘锁
Scope that rclone should use when requesting access from drive.
Enter a string value. Press Enter for the default (&quot;&quot;).
Choose a number from below, or type in your own value
 1 / Full access all files, excluding Application Data Folder.
   \ &quot;drive&quot;
 2 / Read-only access to file metadata and file contents.
   \ &quot;drive.readonly&quot;
   / Access to files created by rclone only.
 3 | These are visible in the drive website.
   | File authorization is revoked when the user deauthorizes the app.
   \ &quot;drive.file&quot;
   / Allows read and write access to the Application Data folder.
 4 | This is not visible in the drive website.
   \ &quot;drive.appfolder&quot;
   / Allows read-only access to file metadata but
 5 | does not allow any access to read or download file content.
   \ &quot;drive.metadata.readonly&quot;
scope&gt; 1 # 选择1然后回车
ID of the root folder
Leave blank normally.

Fill in to access &quot;Computers&quot; folders (see docs), or for rclone to use
a non root folder as its starting point.

Note that if this is blank, the first time rclone runs it will fill it
in with the ID of the root folder.

Enter a string value. Press Enter for the default (&quot;&quot;).
root_folder_id&gt;        # 直接回车
Service Account Credentials JSON file path 
Leave blank normally.
Needed only if you want use SA instead of interactive login.
Enter a string value. Press Enter for the default (&quot;&quot;).
service_account_file&gt; # 直接回车，如果使用Service Account就填写其中一个文件的绝对路径即可：/root/AutoRclone/accounts/0a5af037763bdab70e3a7094d02ec4bd37f8db94.json
Service Account Credentials JSON file path .

Enter a string value. Press Enter for the default (&quot;&quot;).
service_account_file_path&gt; 直接回车，如果使用Service Account就填写这个路径：/root/AutoRclone/accounts/
Edit advanced config? (y/n)
y) Yes
n) No (default)
y/n&gt; n                    # 选择n 不使用高级配置
Remote config
Configure this as a team drive?
y) Yes
n) No (default)
y/n&gt; y                     # 选择n不加载团队盘，选择y加载团队盘
Fetching team drive list...
Choose a number from below, or type in your own value
 1 / 网盘01
   \ &quot;0AFZFXMn1uKs2Uk9PVA&quot;
 2 / 网盘05
   \ &quot;0AI3nH3Vf8NWIUk9PVA&quot;
 3 / 网盘02
   \ &quot;0ADYACmKjlU3JUk9PVA&quot;
Enter a Team Drive ID&gt; # 选择你的团队盘编号
y) Yes this is OK
e) Edit this remote
d) Delete this remote
y/e/d&gt; y       # 选择y回车
Current remotes:

Name                 Type
====                 ====
网盘01             drive

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; q   # 输入q回车，保存配置退出</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[优化Wordpress速度——前端使用国内免费Cdn加速Js/Css文件，后端数据库缓存]]></title>
        <id>https://xiu.pw/NiGGt4ZIu/</id>
        <link href="https://xiu.pw/NiGGt4ZIu/">
        </link>
        <updated>2020-09-11T13:44:25.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>WordPress是一个以PHP和MySQL为平台的自由开源的博客软件和内容管理系统。WordPress具有插件架构和模板系统。截至2018年4月，排名前1000万的网站中超过30.6%使用WordPress。WordPress是最受欢迎的网站内容管理系统。全球有大约30%的网站(7亿5000个)都是使用WordPress架设网站的。WordPress是目前因特网上最流行的博客系统。WordPress在最著名的网络发布阶段中脱颖而出。如今，它被使用在超过7000万个站点上。WordPress是一个以PHP和MySQL为平台的自由开源的博客软件和内容管理系统。WordPress具有插件架构和模板系统。截至2018年4月，排名前1000万的网站中超过30.6%使用WordPress。WordPress是最受欢迎的网站内容管理系统。全球有大约30%的网站(7亿5000个)都是使用WordPress架设网站的。WordPress是目前因特网上最流行的博客系统。WordPress在最著名的网络发布阶段中脱颖而出。如今，它被使用在超过7000万个站点上。</p>
</blockquote>
<p>虽然wordpress很优秀，但是当正式使用这个CMS以后，却发现很吃资源，明明博客没有多少内容，但是只要访问量一大以后，就导致WordPress打开巨慢，同时主机的使用率非常高。</p>
<p>这里就分享一些博主优化WordPress的方法。</p>
<h1 id="分离wordpress的cssjs文件">·分离WordPress的CSS/JS文件</h1>
<p>由于WordPress主要是基于PHP，同时又有大量的css/js文件需要加载。每次打开的时候都需要实时生成需要显示的网页内容，所以会比较吃主机资源。</p>
<p>这里博主推荐一款WordPress插件：commonWP</p>
<p>该插件将WordPress与大部分安装插件所需要的css/js文件通过jsdelivr分发。</p>
<p>jsdelivr目前国内是走网宿的CDN节点，国外走的CloudFlare的节点。加速效果非常明显。强烈建议该插件必备！！</p>
<p>直接WordPress后台插件安装界面搜索commonWP安装其他用即可，不用其他设定。</p>
<p>启用该插件以后，你可能会发现大部分的css/js文件都通过了jsdelivr分发，但是仍然还是有部分文件没有走jsdelivr。</p>
<p>那么这种情况下就需要你手动修改没有走jsdelivr相关的主题/插件文件了。</p>
<p><code>不建议没有动手能力的站长修改！</code></p>
<h1 id="博主这里简单说下如何修改又如何通过jsdelivr分发">博主这里简单说下如何修改，又如何通过jsdelivr分发。</h1>
<h2 id="1-修改主题或者插件引用的cssjs文件地址">1、修改主题或者插件引用的css/js文件地址</h2>
<p>首先你需要确定你要分发的内容是那个插件所需要使用的css/js文件，然后在主机上找到该插件的文件，通过分析源码，找到加载该css/js文件的内容，修改引用链接。修改后的链接后面会说如何获取。</p>
<p>例如本站有使用auto-highslide，该插件就不会自动被commonWP修改成jsdelivr的地址，那么通过分析该插件的文件，找到是通过auto-highslide.php加载的相关css/js文件。</p>
<p>在auto-highslide.php文件里面，发现</p>
<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;'.get_bloginfo('wpurl').'/wp-content/plugins/auto-highslide/highslide/highslide.css&quot; type=&quot;text/css&quot; /&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;'.get_bloginfo('wpurl').'/wp-content/plugins/auto-highslide/highslide/highslide-with-html.packed.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
</code></pre>
<p>那么需要修改的就是</p>
<pre><code>href=&quot;'.get_bloginfo('wpurl').'/wp-content/plugins/auto-highslide/highslide/highslide.css&quot;
</code></pre>
<p>和</p>
<pre><code class="language-javascript">src=&quot;'.get_bloginfo('wpurl').'/wp-content/plugins/auto-highslide/highslide/highslide-with-html.packed.js&quot;
</code></pre>
<p>修改成</p>
<pre><code>href=&quot;https://cdn.jsdelivr.net/gh/Loukky/wpcdn@40028ba1e2ff8193194f9c1474d81ed5d26c52eb/themes/highslide.css&quot;
</code></pre>
<p>和</p>
<pre><code>src=&quot;https://cdn.jsdelivr.net/gh/Loukky/wpcdn@249a403710b0739bf5173cd9d7afeefd04b12eb0/themes/highslide-with-html.packed.js&quot;
</code></pre>
<p>那么完整的代码就是：</p>
<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/Loukky/wpcdn@40028ba1e2ff8193194f9c1474d81ed5d26c52eb/themes/highslide.css&quot; type=&quot;text/css&quot; /&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.jsdelivr.net/gh/Loukky/wpcdn@249a403710b0739bf5173cd9d7afeefd04b12eb0/themes/highslide-with-html.packed.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
</code></pre>
<p>其他的插件与主题修改方法与之类似，另外WP自带的函数是通过 wp_enqueue_style和wp_enqueue_scripts加载CSS和JS文件的，如果是修改主题的话，注意这两个函数。</p>
<h2 id="2-手动通过jsdelivr分发文件">2、手动通过jsdelivr分发文件</h2>
<p>该方法需要通过github来操作，在GitHub上面新建一个仓库，注意仓库设置成public。上传你需要分发的内容，然后通过jsdelivr来分发，具体操作这里不多说。</p>
<p>jsdelivr分发github文件的规则这里说下。</p>
<p>https://cdn.jsdelivr.net/gh/GitHub用户名/仓库名/文件.后缀</p>
<p>注意GitHub区分大小写，其他仓库名后面可以通过@来指定具体的某个release版本或者修订版本。</p>
<h1 id="缓存数据库">·缓存数据库</h1>
<p>一般现在用得较多的数据库缓存是memcached和redis，博主使用的是redis，以redis为例，由于博主是通过宝塔安装的php，所以这里也以宝塔为例。</p>
<p>在宝塔的php管理界面，找到安装扩展，里面有个redis，通过该路径来安装redis，然后wp后台安装上redis相关的插件。博主这里使用的是Redis Object Cache</p>
<p>安装好以后就启用插件，简单设置下就可以了。</p>
<p>（可选）然后在宝塔管理界面，选择mysql管理界面。里面有个性能调整。根据你的实际使用情况调整相关参数。</p>
<figure data-type="image" tabindex="1"><img src="https://loukky.com/wp-content/uploads/2020/08/082615014568_0QQ%E6%88%AA%E5%9B%BE20200826150049.png" alt="" loading="lazy"></figure>
<p>通过上面设置与调整过后，那么现在你的WordPress应该是可以明显感觉到速度提升了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CloudFront扫段Pyhon脚本]]></title>
        <id>https://xiu.pw/iNkGyc0K_/</id>
        <link href="https://xiu.pw/iNkGyc0K_/">
        </link>
        <updated>2020-09-10T02:45:12.000Z</updated>
        <content type="html"><![CDATA[<h1 id="使用方法">使用方法：</h1>
<pre><code>python cfscan.py 183.201.1.1-183.201.255.255 800

cfscan.py = 你保存的文件名

183.201.1.1-183.201.255.255 = 你要扫的起始IP-结尾IP

800 = 线程数
</code></pre>
<h1 id="运行截图">运行截图：</h1>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2020/09/10/aK6zJFCNrY4Ah9m.png" alt="" loading="lazy"></figure>
<h1 id="结果截图">结果截图：</h1>
<figure data-type="image" tabindex="2"><img src="https://i.loli.net/2020/09/10/ipcu5gzH1LDn6WY.png" alt="" loading="lazy"></figure>
<h1 id="脚本代码">脚本代码：</h1>
<pre><code>#!/usr/bin/env python
# coding=utf-8
# python2.7 only

import threading
import requests
import Queue
import sys
import re

#ip to num
def ip2num(ip):
    ip = [int(x) for x in ip.split('.')]
    return ip[0] &lt;&lt; 24 | ip[1] &lt;&lt; 16 | ip[2] &lt;&lt; 8 | ip[3]

#num to ip
def num2ip(num):
    return '%s.%s.%s.%s' % ((num &amp; 0xff000000) &gt;&gt; 24,(num &amp; 0x00ff0000) &gt;&gt; 16,(num &amp; 0x0000ff00) &gt;&gt; 8,num &amp; 0x000000ff)

#
def ip_range(start, end):
    return [num2ip(num) for num in range(ip2num(start), ip2num(end) + 1) if num &amp; 0xff]

#
def bThread(iplist):
   
    threadl = []
    queue = Queue.Queue()
    for host in iplist:
        queue.put(host)

    for x in xrange(0, int(SETTHREAD)):
        threadl.append(tThread(queue))
        
    for t in threadl:
        t.start()
    for t in threadl:
        t.join()        

#create thread
class tThread(threading.Thread):
    def __init__(self, queue):
        threading.Thread.__init__(self)
        self.queue = queue

    def run(self):
        
        while not self.queue.empty():
            host = self.queue.get()
            try:
                checkServer(host)
            except:
                continue

def checkServer(host):
    header ={'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36'}
    aimurl = &quot;http://&quot;+host+&quot;:443&quot;
    response = requests.get(url=aimurl,headers=header,timeout=10)
    serverText = response.headers['server']

    if len(serverText) &gt; 0:
        print  &quot;-&quot;*50+&quot;\n&quot;+aimurl +&quot;\nServer: &quot;+serverText
        if (serverText == &quot;CloudFront&quot;):
            f.write(host+&quot;\n&quot;)


if __name__ == '__main__':
    print '\n############# Cloud Front Scan  ################'
    print '                Author hostloc.com'
    print '################################################\n'

    global SETTHREAD

    try:
        SETTHREAD = sys.argv[2]
        f = open(&quot;result.txt&quot;, &quot;w&quot;)
        iplist = ip_range(sys.argv[1].split('-')[0], sys.argv[1].split('-')[1])
        
        print '\n[Note] Will scan '+str(len(iplist))+&quot; host...\n&quot;

        bThread(iplist)
    except KeyboardInterrupt:
        print 'Keyboard Interrupt!'
        sys.exit()</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[页内和页外SEO技术]]></title>
        <id>https://xiu.pw/73lF-bANp/</id>
        <link href="https://xiu.pw/73lF-bANp/">
        </link>
        <updated>2020-09-03T04:48:14.000Z</updated>
        <content type="html"><![CDATA[<h2 id="搜索引擎优化不会消失-随着搜索越来越根深蒂固地融入到人们兴趣的问题和信息答案的方式中-但seo是很棘手的游戏总是改变从来没有简单-那么当涉及到排名时如何保持领先呢">搜索引擎优化不会消失。随着搜索越来越根深蒂固地融入到人们兴趣的问题和信息答案的方式中。但SEO是很棘手的游戏，总是改变，从来没有简单。那么，当涉及到排名时，如何保持领先呢？</h2>
<h2 id="seo-由两个部门组成页面外和页面">SEO 由两个部门组成：页面外和页面。</h2>
<ul>
<li><strong>页面外SEO是指您的网站在搜索引擎眼中拥有的权威</strong></li>
<li><strong>网页SEO是指网站本身的内容和结构</strong></li>
</ul>
<p><em>对非页面和页面搜索引擎优化的强烈关注将在网站的排名和流量方面，并将直接影响收入、销售、转化和客户的获取</em>。</p>
<h1 id="页面外seo优化">页面外SEO优化</h1>
<ul>
<li>
<p>技巧开发的内容，很容易共享。内容是 SEO 的王道。开发高质量内容，方便推荐网页的实际人员中自然生成反向链接。</p>
</li>
<li>
<p>尽可能经常外联。从他们的博客中留言并申请反向链接。</p>
</li>
<li>
<p>你可以从社交媒体渠道获得很多的社交信息和自然链接，以及增加来自社交引用来源的流量。</p>
</li>
<li>
<p>多媒体来源的链接也是实现链接配置文件多样化的一个很好的方式。利用YouTube和其他视频共享网站，并在描述中添加链接（如果适用）。利用Imgur和其他图像共享网站，并在描述中再次添加链接（如果适用）。播客以及其他音频网站。文档共享网站（如 Slideshare 和Web 2.0）的&quot;中等&quot;网站也一样。</p>
</li>
<li>
<p>最近流行的抓流量和反向链接的方法之一来自网站，如Quora和其他问答引擎。查找与业务和主题相关的问题，并提供简洁、清晰的问题的答案。令人惊讶的是， 有足够的参与度， Quora 上的无跟随反向链接可以跟随。</p>
</li>
<li>
<p>避免过度优化关键字。如果您选择仅定位完全匹配的关键字，则链接构建中可能会遇到问题，因为它与您的排名相关。在我看来，90%左右应该是通用和品牌关键字，以及一些赤裸裸的网址。请记住，在构建链接时，尽可能自然地显示非常重要。只有大约 5% 的会针对选择定位的精确匹配短语。</p>
</li>
<li>
<p>对于网站是实时和成长阶段头三个月，我将专注于通用和品牌词。瞄准尽可能多的品牌词，如搜索引擎，如品牌。使您的网站看起来像一个品牌。在此之后，我慢慢地开始添加裸网址、LSI 变体和完全匹配的关键字的组合。</p>
</li>
</ul>
<h1 id="专注于页面优化页面">专注于页面优化页面</h1>
<p>优化是指可以在您控制的网站属性的页面上进行的更改和增强。如果执行得当，页面 SEO 可以简单得多、更有效，并且需要的研究比页面外优化少得多。</p>
<ul>
<li>
<p>精确匹配词出现在标题</p>
</li>
<li>
<p>搜索引擎需要知道您的网页是关于什么的</p>
</li>
<li>
<p>确保您尝试排名的主要关键字位于文章的标题中，这一点至关重要。很少有搜索结果中缺少标题中的主关键字会排名该关键字或相关的 LSI 长尾</p>
</li>
<li>
<p>关键字之间 SEO 价值， 哪些是最好标题中的关键字</p>
</li>
<li>
<p>在描述中是唯一的，使用主关键字</p>
</li>
<li>
<p>页面标题（搜索引擎看到）应不超过 50 到 60 个字符（如果可能）。</p>
</li>
<li>
<p>同时，您不希望标题显示的信息太少，不会造成混淆。页面的元描述应限制大约 150个字符。这将确保您不会在搜索结果中被截断。</p>
</li>
<li>
<p>使用关键字和 Lsi 变体在标题标签文本</p>
</li>
<li>
<p>标题标签告诉搜索引擎您的内容概述。它们从 H1（最大，通常是标题标签）到 H6。文章和帖子中最常用的标签是 H2 和 H3。如果完全不使用标题标记，则爬虫很识别您的文章内容，并且您的帖子结构将遭受人类访问者的影响。</p>
</li>
<li>
<p>最佳做法是考虑 H1 标题，H2 主节标题，然后 H3 考虑子节标题。在这些标题标记中使用 LSI 关键字的变体非常重要。LSI 代表潜在的语义索引，这是一个系统搜索引擎，用于分析人们围绕给定主题使用的其他词。LSIGraph 是一个可靠的免费工具，用于发现 LSI 关键字，这些关键字与目标关键字类似，但更集中且搜索量较低。</p>
</li>
<li>
<p>网站速度的重要性是至关重要的，页面搜索引擎优化最关键的部分之一是网站加载速度。</p>
</li>
<li>
<ul>
<li>提高网站速度的一些最佳方法包括： 提高网站速度的一些最佳方法包括：<br>
使用 Gzip 等工具在现场启用压缩。<br>
优化ML和JavaScript。<br>
减少站点上的重定向数。<br>
删除呈现阻止 JavaScript。<br>
利用浏览器的缓存。<br>
提高服务器的响应时间。<br>
利用 CDN 或内容分发网络。<br>
执行高质量的图像优化。</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何在同一个虚拟主机空间优雅地安装多个网站]]></title>
        <id>https://xiu.pw/ZZXDhqj85/</id>
        <link href="https://xiu.pw/ZZXDhqj85/">
        </link>
        <updated>2020-09-02T07:13:22.000Z</updated>
        <content type="html"><![CDATA[<p>如何在同一个虚拟主机空间优雅地安装多个网站</p>
<pre><code> &lt;?php
    switch ($_SERVER[&quot;HTTP_HOST&quot;])
    {
        case &quot;www.uselys.com&quot;:
                            header(&quot;location:.com&quot;);
        break;
        case &quot;www.uselys.cn&quot;:
                            header(&quot;location:.cn&quot;);
        break;
        case &quot;www.panyh.net&quot;:
                            header(&quot;location:panyh&quot;);
        break;
    }
    ?&gt;
</code></pre>
<p>也就是在根目录 / 下放一个 index.php，然后根据域名分别跳转到对应的子目录下，实现同一个空间安装多个网站的办法。</p>
<p>但这种方法毕竟有点拖沓，于是有了另一段代码：</p>
<pre><code>RewriteEngine on

DirectoryIndex index.html index.htm index.php default.php index.cgi

# 条件：如果所访问的目标既不是文件，也不是目录
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d

# 那么：

###########################  第一段 ########################
# 把 /uselys.cn/ 作为 www.uselys.cn 的根目录
# 如果主机为 www.uselys.cn 并且 uri 不以 /uselys.cn/ 作为开头
RewriteCond %{HTTP_HOST} www.uselys.cn
RewriteCond %{REQUEST_URI} !^/uselys.cn/
#那么，就把网址里所有的文件都跳转到 /uselys.cn/下对应的内容：
RewriteRule ^(.*)$ /uselys.cn/$1
# 如果主机为 www.uselys.cn
RewriteCond %{HTTP_HOST} www.uselys.cn
#那么，就把默认首页 / 跳转到 /uselys.cn/index.php文件，并结束跳转
RewriteRule ^(/)?$ uselys.cn/index.php [L]

###########################  第二段 ########################

RewriteCond %{HTTP_HOST} ^www.uselys.com$
RewriteCond %{REQUEST_URI} !^/uselys.com/
RewriteRule ^(.*)$ /uselys.com/$1
RewriteCond %{HTTP_HOST} ^www.uselys.com$
RewriteRule ^(/)?$ uselys.com/index.php [L]

###########################  第三段 ########################

RewriteCond %{HTTP_HOST} ^www.panyh.net$
RewriteCond %{REQUEST_URI} !^/panyh.net/
RewriteRule ^(.*)$ /panyh.net/$1
RewriteCond %{HTTP_HOST} ^www.panyh.net$
RewriteRule ^(/)?$ panyh.net/ [L]

# ... 以此类推
</code></pre>
<p>这是一段 apache的配置文件。当前所有Linux虚拟空间和全能空间都会支持 .htaccess 配置吧。</p>
]]></content>
    </entry>
</feed>