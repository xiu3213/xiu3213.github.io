<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xiu3213.github.io</id>
    <title>秀儿</title>
    <updated>2020-08-08T01:11:15.809Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://xiu3213.github.io"/>
    <link rel="self" href="https://xiu3213.github.io/atom.xml"/>
    <subtitle>知难而退</subtitle>
    <logo>https://xiu3213.github.io/images/avatar.png</logo>
    <icon>https://xiu3213.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 秀儿</rights>
    <entry>
        <title type="html"><![CDATA[为Onedrive套上CDN加速下载]]></title>
        <id>https://xiu3213.github.io/G7OkD-Cag/</id>
        <link href="https://xiu3213.github.io/G7OkD-Cag/">
        </link>
        <updated>2020-08-08T01:10:25.000Z</updated>
        <content type="html"><![CDATA[<p>首先推荐两种程序</p>
<p>1.php的OneIndex修改版</p>
<p>2.萌咖的GO版OneList</p>
<p>这两种程序都能够直接将sharepoint域名替换为你反代的域名或者是CDN域名</p>
<p>程序地址：</p>
<p>OneIndex：https://github.com/caippx/oneindex-j</p>
<p>OneList：https://github.com/MoeClub/OneList/tree/master/Rewrite</p>
<p>使用方法<br>
OneList：</p>
<p>这个就很简单了，根据github中的教程 配置好配置文件之后</p>
<p>在运行的时候使用</p>
<p>OneList -bind 0.0.0.0 -port 80 -P &quot;xxxxx-my.sharepoint.com|domain.com&quot;<br>
即可将你的sharepoint域名替换成domain.con</p>
<p>OneIndex：</p>
<p>这个版本是经过我修改的版本，在安装完成之后 直接在后台设置里面可以看到替换sharepoint域名的选项</p>
<p>填上即可 如果留空 则不使用该功能</p>
<p>注：sharepoint域名为你在网页版onedrive首页时的那个域名xxxxx-my.sharepoint.com</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何反代-加速OneDrive域名]]></title>
        <id>https://xiu3213.github.io/CZWvLVqdV/</id>
        <link href="https://xiu3213.github.io/CZWvLVqdV/">
        </link>
        <updated>2020-08-08T01:08:28.000Z</updated>
        <content type="html"><![CDATA[<p>反代OneDrive域名<br>
利用Caddy反代OneDrive<br>
Caddy安装方法请自行搜索</p>
<p>domain.com {<br>
tls admin@domain.com<br>
timeouts none<br>
gzip<br>
proxy / https://xxx-my.sharepoint.com {<br>
header_upstream Host xxx-my.sharepoint.com<br>
header_upstream Referer https://xxx-my.sharepoint.com<br>
header_upstream -X-Forwarded-For {remote}<br>
header_upstream X-Real-IP {remote}<br>
header_upstream User-Agent {&gt;User-Agent}<br>
header_upstream Accept-Encoding identity<br>
}</p>
<p>写入如下配置<br>
重启caddy然后按照上一篇文章运行onelist或者修改oneindex配置即可</p>
<p>用CDN加速OneDrive<br>
本文只介绍nodecache 其他CDN 操作基本差不多</p>
<figure data-type="image" tabindex="1"><img src="https://xiu3213.github.io/post-images/1596848948187.jpg" alt="" loading="lazy"></figure>
<p>像上面这样填写点击确认创建并修改加速域名cname至nodecache生成的xxxxxxxxx.ncname.com域名</p>
<p>之后选择回源管理，将回源HOST 修改为xxx-my.sharepoint.com （必须</p>
<p>再到HTTPS 栏 添加加速域名的SSL证书</p>
<p>然后隐身模式访问加速域名 如果跳转到office登录页面 则说明成功</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[用Actions每天自动使用Rclone调用OneDrive使Office E5订阅保持活跃]]></title>
        <id>https://xiu3213.github.io/ppkASNJMF/</id>
        <link href="https://xiu3213.github.io/ppkASNJMF/">
        </link>
        <updated>2020-08-08T00:56:41.000Z</updated>
        <content type="html"><![CDATA[<p>注：E5保活皆是玄学，能不能成功谁能知道呢？</p>
<p>使用方法<br>
零、打开Github项目地址<br>
https://github.com/peng4740/E5-Rclone-Actions</p>
<p>一、Fork此仓库<br>
<img src="https://xiu3213.github.io/post-images/1596848323726.png" alt="" loading="lazy"></p>
<p>二、设置Rclone配置<br>
添加名为RCLONE_CONFIG的变量<br>
值为Rclone的配置，需要你本地先生成配置，之后打开Rclone配置文件复制出OneDrive的配置<br>
配置最前面的[od]需要改成<a href="%22od%22%E6%98%AF%E5%9C%A8%E7%94%A8Rclone%E6%B7%BB%E5%8A%A0OneDrive%E6%97%B6%E8%AE%BE%E7%BD%AE%E7%9A%84">e5</a><br>
<img src="https://xiu3213.github.io/post-images/1596848342263.png" alt="" loading="lazy"></p>
<p>三、启用Actions<br>
如图所示开启Actions，之后再对你自己Fork后的仓库点击Star(不要漏看了这一句)<br>
<img src="https://xiu3213.github.io/post-images/1596848354441.png" alt="" loading="lazy"><br>
<img src="https://xiu3213.github.io/post-images/1596848373311.png" alt="" loading="lazy"></p>
<p>四、查看运行结果<br>
Actions &gt; E5-Rclone-Actions</p>
<p>五、Rclone使用自己的API<br>
不长篇大论一大堆了，只提基本的几个点</p>
<p>到Azure新注册一个应用：https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade</p>
<p>名称：随意<br>
重定向URI：http://localhost</p>
<p>创建完成的页面(概述)可以看到Client_ID，也就是应用程序(客户端)ID，记录下来</p>
<p>到API权限页面添加权限：Files.Read、Files.ReadWrite、Files.Read.All、Files.ReadWrite.All、offline_access、User.Read</p>
<p>到证书和密码页面，添加客户端密码，一年还是长期，都可以。这个就是Client_secret，也要记录下来</p>
<p>rclone config添加配置时，填写自己的Client_ID和Client_secret按提示操作即可</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Telegram 本地消息防撤回插件]]></title>
        <id>https://xiu3213.github.io/PVphxlRBy/</id>
        <link href="https://xiu3213.github.io/PVphxlRBy/">
        </link>
        <updated>2020-08-07T03:34:05.000Z</updated>
        <content type="html"><![CDATA[<p>🔍 预览</p>
<p><img src="https://xiu3213.github.io/post-images/1596771304759.gif" alt="" loading="lazy"><br>
✨ 特性<br>
阻止本地消息被服务器撤回。<br>
被撤回的消息将被标记上 “已删除” 。<br>
插件具有极好的兼容性。<br>
标记的内容支持多语言自动识别。<br>
目前已支持自动识别：<br>
英语、简体中文语、繁体中文语、日语、韩语<br>
🍅 兼容性<br>
目前仅兼容 Windows Telegram v1.9.0 ~ v2.2.0 或更高。<br>
如果您正在使用 Telegram beta，请下载最新预览版本。</p>
<p>🍔 用法<br>
1.前往 发行页面 下载最新版本插件。<br>
2.关闭正在运行的 Telegram 进程。<br>
3.复制 version.dll 文件到 Telegram 根目录。<br>
4.运行 Telegram 程序。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SSH 密钥一键配置脚本 使用教程]]></title>
        <id>https://xiu3213.github.io/bkZunUpHG/</id>
        <link href="https://xiu3213.github.io/bkZunUpHG/">
        </link>
        <updated>2020-08-07T02:07:14.000Z</updated>
        <content type="html"><![CDATA[<p>前言<br>
对于新入手或重装后的 VPS 配置密钥登录需要创建 ~/.ssh 目录、把公钥写入到 ~/.ssh/authorized_keys、设置权限、禁用密码登录等操作，虽然都是很简单的基础操作，但过程麻烦且枯燥：</p>
<p>mkdir -p ~/.ssh<br>
curl -fsSL https://github.com/P3TERX.keys &gt;&gt; ~/.ssh/authorized_keys<br>
chmod 700 ~/.ssh<br>
chmod 600 ~/.ssh/authorized_keys<br>
sudo sed -i &quot;s@.<em>(PasswordAuthentication ).</em>@\1no@&quot; /etc/ssh/sshd_config<br>
sudo service sshd restart<br>
SSH 密钥一键配置脚本是一套用于简化 SSH 密钥配置过程的解决方案。使用它以上操作只需要一行命令：</p>
<p>bash &lt;(curl -fsSL git.io/key.sh) -g P3TERX -d<br>
语法及选项说明<br>
bash &lt;(curl -fsSL git.io/key.sh) [选项...] &lt;参数&gt;<br>
-o – 覆盖模式，必须写在最前面才会生效<br>
-g – 从 GitHub 获取公钥，参数为 GitHub 用户名<br>
-u – 从 URL 获取公钥，参数为 URL<br>
-l – 从本地文件获取公钥，参数为本地文件路径<br>
-p – 修改 SSH 端口，参数为端口号<br>
-d – 禁用密码登录<br>
使用方法<br>
生成 SSH 密钥对<br>
如果没有密钥需要先生成，执行以下命令后一路回车即可。</p>
<p>ssh-keygen -t ecdsa -b 521<br>
TIPS： 此方法适用于 Win­dows 10 (1803后)的 Pow­er­Shell 或 WSL，Linux 发行版和 ma­cOS 自带的终端，但不仅限于这些环境。科普： 521 位的 ECDSA 密钥比起 RSA 密钥更安全且验证速度更快。</p>
<p>操作完后会在 ~/.ssh 目录中生两个密钥文件，id_ecdsa 为私钥，id_ecdsa.pub 为公钥。公钥就是我们需要安装在远程主机上的。</p>
<p>科普：~符号代表用户主目录，俗称家目录。其路径与当前登陆的用户有关，在 Linux 中普通用户家目录的路径是/home/用户名，而 root 用户是/root。Win­dowd 10 中路径是C:\Users\用户名。在 ma­cOS 中路径是/Users/用户名。</p>
<p>安装公钥<br>
从 GitHub 获取公钥<br>
在 GitHub 密钥管理页面 添加公钥，比如我的用户名是 P3TERX，那么在主机上输入以下命令即可：</p>
<p>bash &lt;(curl -fsSL git.io/key.sh) -g P3TERX<br>
从 URL 获取公钥<br>
把公钥上传到网盘，通过网盘链接获取公钥：</p>
<p>bash &lt;(curl -fsSL git.io/key.sh) -u https://p3terx.com/key.pub<br>
从本地文件获取公钥<br>
通过 FTP 的方式把公钥传到 VPS 上，然后指定公钥路径：</p>
<p>bash &lt;(curl -fsSL git.io/key.sh) -f ~/key.pub<br>
覆盖模式<br>
使用覆盖模式（-o）将覆盖 /.ssh/authorized_keys 文件，之前的密钥会被完全替换掉，选项必须写在最前面才会生效，比如：</p>
<p>bash &lt;(curl -fsSL git.io/key.sh) -o -g P3TERX<br>
或者</p>
<p>bash &lt;(curl -fsSL git.io/key.sh) -og P3TERX<br>
禁用密码登录<br>
在确定使用密钥能正常登录后禁用密码登录：</p>
<p>bash &lt;(curl -fsSL git.io/key.sh) -d<br>
修改 SSH 端口<br>
把 SSH 端口修改为 2222：</p>
<p>bash &lt;(curl -fsSL git.io/key.sh) -p 2222<br>
一键操作<br>
安装密钥、修改端口、禁用密码登录一键操作：</p>
<p>bash &lt;(curl -fsSL git.io/key.sh) -og P3TERX -p 2222 -d</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一键安装配置高性能的CDN节点]]></title>
        <id>https://xiu3213.github.io/yjgxn/</id>
        <link href="https://xiu3213.github.io/yjgxn/">
        </link>
        <updated>2020-08-07T02:01:31.000Z</updated>
        <content type="html"><![CDATA[<p>1, 系统环境要求<br>
目前支持Ubuntu 20.04 LTS, Debian 10, CentOS 7/8操作系统。</p>
<p>CDN服务器正常运行时仅需要系统有500MB的内存。但是，程序第一次编译安装的时候需要1500MB左右的内存。若您的VPS内存不够，可以加一些Swap.</p>
<p>需要注意的是，该脚本需要安装在新装的操作系统中。该程序和其他面板（比如宝塔，cPanel, Directadmin）等不兼容。毕竟，装CDN程序的节点上也不应该搭建其他程序的。</p>
<p>2, 使用方法<br>
因为是一键脚本，所以使用起来非常简单，只需要一行命令就可以啦！</p>
<p>wget https://raw.githubusercontent.com/Har-Kuun/OneClickCDN/master/OneClickCDN.sh &amp;&amp; sudo bash OneClickCDN.sh<br>
第一次运行时，程序会提示自动编译安装Traffic Server.  安装完毕后，程序会引导新建CDN网站，自动签发SSL, 等等。您需要将您网站的域名设置A记录解析到这台VPS的IP地址上。</p>
<p>您也可以随时重新运行该脚本，用来管理您的服务器上部署的CDN网站，查看网站统计，等等。</p>
<p>3, 管理面板<br>
脚本执行后拥有功能丰富但简单易用的后台管理界面。</p>
<figure data-type="image" tabindex="1"><img src="https://xiu3213.github.io/post-images/1596765735341.png" alt="" loading="lazy"></figure>
<p>4, 实现的功能<br>
首先，最基本的功能就是CDN.  安装后，程序就会将您的VPS变成一个高性能CDN节点，用来加速和缓存您的网站。</p>
<p>同时，脚本支持一键设置SSL, 您可以提供您自己的SSL证书，或者也可以一键签发免费的Let’s Encrypt证书，并且开启OCSP装订。</p>
<p>脚本还支持随时增添新的CDN网站。您只需要根据脚本引导，输入网址和源站IP地址，即可分分钟添加CDN网址。您可以使用脚本管理CDN网站，查看网站数据，清除缓存，等等。</p>
<p>Github项目地址：https://github.com/Har-Kuun/OneClickCDN 欢迎大家加星星加叉叉<br>
本文及程序作者为香菇肥牛，原文链接https://qing.su/article/oneclick-cdn.html, 转载需注明原文链接。谢谢！</p>
<p>小彩蛋：稍微修改一下脚本（脚本开头有说明，可以开启反代模式）可以一键反代hostloc哦 <sup>.</sup></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一键重装脚本/一键DD脚本]]></title>
        <id>https://xiu3213.github.io/1.html/</id>
        <link href="https://xiu3213.github.io/1.html/">
        </link>
        <updated>2020-08-07T01:56:28.000Z</updated>
        <content type="html"><![CDATA[<p>支持重装的系统：<br>
Debian 9/10<br>
Ubuntu 18.04/16.04<br>
CentOS 6/7<br>
自定义DD镜像</p>
<p>特性/优化：<br>
自动获取IP地址、网关、子网掩码<br>
自动判断网络环境，选择国内/外镜像，再也不用担心卡半天了<br>
超级懒人一键化，无需复杂的命令<br>
解决萌咖脚本中一些导致安装错误的问题<br>
CentOS 7 镜像抛弃LVM，回归ext4，减少不稳定因素</p>
<p>使用方法：非常简单</p>
<p>wget --no-check-certificate -O AutoReinstall.sh https://git.io/AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh<br>
<img src="https://xiu3213.github.io/post-images/1596765505850.webp" alt="" loading="lazy"></p>
]]></content>
    </entry>
</feed>